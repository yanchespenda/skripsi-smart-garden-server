# Auto Deploy AWS EC2 Instance
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [14.x]
    #     app-name: ['skripsi-ci-cd']
    #     deployment-group: ['skripsi-deploy']

    steps:
      - uses: actions/checkout@v2

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          script: ${{ secrets.PROJECT_SCRIPT }}

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - name: Install dependencies
      #   run: yarn install

      # - name: Build app
      #   run: yarn build

      # - name: Install AWS CLI 
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install --update

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-southeast-1

      # - name: Push to EC2
      #   id: deploy
      #   run: |
      #     # Assuming the Deployment Group is already setup
      #     aws deploy create-deployment \
      #       --application-name ${{ matrix.app-name }} \
      #       --deployment-group-name ${{ matrix.deployment-group }} \
      #       --deployment-config-name CodeDeployDefault.OneAtATime \
      #       --description "GitHub Deployment for the ${{ matrix.app-name }}-${{ github.sha }}" \
      #       --github-location repository=${{ github.repository }},commitId=${{ github.sha }}